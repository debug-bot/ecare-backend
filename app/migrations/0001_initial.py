# Generated by Django 3.2 on 2021-09-24 08:06

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Lab',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=None, max_length=255, null=True)),
                ('location', models.CharField(max_length=255)),
                ('price', models.DecimalField(decimal_places=4, default=None, max_digits=10, null=True)),
                ('discount_percent', models.IntegerField(default=0, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=None, max_length=255, null=True)),
                ('email', models.EmailField(blank=True, default=None, max_length=255, null=True)),
                ('address', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('contact', models.CharField(blank=True, default=None, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Pharmacy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=None, max_length=255, null=True)),
                ('location', models.CharField(default=None, max_length=255, null=True)),
                ('contact', models.CharField(default=None, max_length=255, null=True)),
            ],
            options={
                'verbose_name_plural': 'Pharmacies',
            },
        ),
        migrations.CreateModel(
            name='Rider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=None, max_length=255, null=True)),
                ('email', models.EmailField(blank=True, default=None, max_length=255, null=True)),
                ('address', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('contact', models.CharField(blank=True, default=None, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=None, max_length=255, null=True)),
                ('description', models.CharField(default=None, max_length=255, null=True)),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('labs', models.ManyToManyField(blank=True, related_name='test_labs', to='app.Lab')),
            ],
        ),
        migrations.AddField(
            model_name='lab',
            name='pharmacies',
            field=models.ManyToManyField(blank=True, related_name='lab_pharmacies', to='app.Pharmacy'),
        ),
        migrations.AddField(
            model_name='lab',
            name='riders',
            field=models.ManyToManyField(blank=True, related_name='lab_riders', to='app.Rider'),
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(auto_now_add=True, null=True)),
                ('patient', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cart_patient', to='app.patient')),
                ('pharmacy', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cart_pharmacy', to='app.pharmacy')),
                ('rider', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cart_rider', to='app.rider')),
                ('test', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cart_tests', to='app.test')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('email', models.EmailField(db_index=True, max_length=255, primary_key=True, serialize=False, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=255)),
                ('middle_name', models.CharField(blank=True, max_length=255)),
                ('last_name', models.CharField(blank=True, max_length=255)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('auth_provider', models.CharField(default='email', max_length=255)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
